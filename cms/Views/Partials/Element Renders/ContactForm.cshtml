@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<IPublishedElement>

@{
    var socialMedias = Model.Value<IEnumerable<IPublishedElement>>("socialMedias");
    var formId = "a" + Guid.NewGuid().ToString().Replace("-", "");
}

<div class="inner columns divided">
    <div class="span-3-25">
        <form v-on:submit.prevent="onsubmit" class="@formId" v-cloak>
            <span v-if="success" class='fa-check'>
                <i class="fa fa-check-circle" aria-hidden="true"></i>
                Message sent successfully
            </span>
            <span v-if="failed" style="color:#e37b7c">
                <i class="fa fa-exclamation-triangle" aria-hidden="true"></i>
                Something went wrong while sending the message
            </span>
            <span v-if="invalid" style="color:#e37b7c">
                <i class="fa fa-exclamation-triangle" aria-hidden="true"></i>
                All fields must filled and valid
            </span>
            <div class="fields">
                <div class="field half">
                    <label for="name">Name</label>
                    <input type="text" name="name" id="name" :disabled="loading" v-model="form.name" required />
                </div>
                <div class="field half">
                    <label for="email">Email</label>
                    <input type="email" name="email" id="email" :disabled="loading" v-model="form.email" required />
                </div>
                <div class="field">
                    <label for="message">Message</label>
                    <textarea name="message" id="message" rows="4" :disabled="loading" v-model="form.message"
                        required></textarea>
                </div>
            </div>
            <ul class="actions">
                <li>
                    <input type="submit" value="Send Message" class="button primary" :disabled="loading"
                        v-on:click.prevent="onsubmit" />
                    <br />
                    <span v-if="loading">
                        <i class="fa fa-spinner" aria-hidden="true"></i>
                        Sending...
                    </span>
                </li>
            </ul>
        </form>
    </div>
    <div class="span-1-5">
        <ul class="contact-icons color1">
            @foreach (var socialMedia in socialMedias)
            {
                <li class='icon brands fa-@socialMedia.Value("icon")'>
                    <a href='@socialMedia.Value("link")'>@socialMedia.Value("label")</a>
                </li>
            }
        </ul>
    </div>
</div>


<script>
    function setupForm() {
        Vue.createApp( {
            data: function () {
                return {
                    success: false,
                    failed: false,
                    loading: false,
                    invalid: false,
                    form: {}
                }
            },
            methods: {
                onsubmit: function () {
                    this.invalid = false;
                    this.loading = true;
                    this.success = false;
                    this.failed = false;

                    if ( !this.form.name || !this.form.email || !this.form.message ) {
                        this.invalid = true;
                        return;
                    }

                    let formData = new FormData();
                    formData.append( "name", this.form.name );
                    formData.append( "email", this.form.email );
                    formData.append( "message", this.form.message );

                    axios( {
                        method: "post",
                        url: "/contact-form",
                        data: formData,
                        headers: { "Content-Type": "multipart/form-data" },
                    } ).then( response => response.data )
                        .then( data => {
                            console.log( data );
                            this.success = true;
                            this.form = {};
                        } )
                        .catch( error => {
                            this.failed = true;
                        } )
                        .finally( _ => {
                            this.loading = false;
                        } );

                    return false;
                }
            }

        } ).mount( '.@formId' );
    }

    window.addEventListener( 'load', setupForm );
</script>